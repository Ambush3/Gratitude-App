<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Gratitude Journal</title>
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/imgs/journal.png"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
      integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w=="
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/css/style.css" />
    <script src="https://kit.fontawesome.com/94a8dc06e7.js" crossorigin="anonymous"></script>
  </head>
  <body>
    <header class="header-container">
      <div class="gratitude-center">
        <h1 class="gratitudeTitle"><a href="/profile">Gratitude Journal</a></h1>
      </div>
      <!-- Hamburger menu with username, email, and logout -->
      <div class="hamburger-menu">
        <input id="menu__toggle" type="checkbox" />
        <label class="menu__btn" for="menu__toggle">
          <span></span>
        </label>

        <ul class="menu__box" id="menuBox">
          <li><a class="menu__item" href="/profile">Profile</a></li>
          <li><a class="menu__item" href="/edit-profile">Edit Profile</a></li>
          <li><a class="menu__item" href="/daily-motivation">Daily Motivation</a></li>
          <!-- <li><a class="menu__item" href="/saved-posts">Saved Posts</a></li> -->
          <li><a class="menu__item" href="/logout">Logout</a></li>
        </ul>
      </div>
    </header>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-KyZXEAg3QhqLMpG8r+Knujsl5/a1Cf2akJeKMTwrvxlW2yBPAYYzJdN8NfqaVn9J" crossorigin="anonymous"></script>
    <script>
      function handleFileSelect(event) {
          const selectedFile = event.target.files[0];
          const selectedFileName = selectedFile.name;
          const preview = document.getElementById('preview');
          const imgPreview = document.querySelector('.img-preview');
          const removeImage = document.getElementById('removeImage');
          const reader = new FileReader();

          // Set the file name on the selectedFile span
          document.getElementById('selectedFile').textContent = selectedFileName;

          // Show the remove image button and the selectedFile element
          removeImage.classList.remove('d-none');
          document.getElementById('selectedFile').classList.remove('d-none');;

          // Handle the image preview
          reader.onload = function (event) {
            preview.src = event.target.result;
            imgPreview.classList.remove('d-none');
          };

          // Read the selected file and show the preview
          reader.readAsDataURL(selectedFile);
        };

        function removeImage() {
          // Remove the selected file name and image preview
          const preview = document.getElementById('preview');
          const imgPreview = document.querySelector('.img-preview');
          const removeImage = document.getElementById('removeImage');
          const selectedFile = document.getElementById('selectedFile');
          const imageUpload = document.getElementById('imageUpload');
          imgPreview.classList.add('d-none');
          removeImage.classList.add('d-none');
          preview.src = '';
          selectedFile.textContent = '';
          selectedFile.classList.add('d-none'); // Hide the selected file element
          imageUpload.value = '';
        };

        document.addEventListener("DOMContentLoaded", function () {
          const menuToggle = document.getElementById("menu__toggle");
          const menuBtn = document.querySelector(".menu__btn");
          const menuBox = document.getElementById("menuBox");

          document.addEventListener("click", function (event) {
            if (!menuBox.contains(event.target) && !menuToggle.contains(event.target) && menuToggle.checked) {
              menuToggle.checked = false;
            }
          });

          const removeImageButton = document.getElementById("removeImage");

          removeImageButton.addEventListener("click", function () {
            removeImage();
          });

          menuBtn.addEventListener("click", function (event) {
            if (menuToggle.checked) {
              setTimeout(() => {
                menuToggle.checked = false;
              }, 0);
            }
          });

          const addEntryButton = document.getElementById('addEntryButton');
          const gratitudeForm = document.getElementById('gratitudeForm');
          const addEntryContainer = document.getElementById('addEntryContainer');
          
        });

        function prepareDelete(postId) {
          document.getElementById('confirmDelete').addEventListener('click', (event) => {
            event.preventDefault();

            fetch(`/post/${postId}`, {
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json',
              },
            })
              .then((response) => response.json())
              .then((data) => {
                if (data.message === 'Post deleted successfully') {
                  window.location.href = '/profile';
                } else {
                  alert('Something went wrong. Please try again.');
                }
              })
              .catch((error) => {
                console.log(error);
              });
          });
        };

        function prepareEdit(postId, title, caption, image) {
            const editModal = document.querySelector('#editPostModal');
            const confirmEdit = editModal.querySelector('#confirmEdit');
            const titleInput = editModal.querySelector('#title');
            const captionInput = editModal.querySelector('#caption');
            const imageInput = editModal.querySelector('#imageUpload');
            const preview = editModal.querySelector('#preview');

            // Set the form input values to the parameter values
            titleInput.value = title;
            captionInput.value = caption;
            if (image) {
              // If we have a new image, update the image preview and input file
              preview.src = image;
              preview.classList.remove('d-none');
              imageInput.value = '';
            } else {
              // If we don't have a new image, clear the preview and input file
              preview.src = '#';
              preview.classList.add('d-none');
              imageInput.value = '';
            }

            confirmEdit.addEventListener('click', (event) => {
              event.preventDefault();
              const formData = new FormData();
              formData.append('title', titleInput.value);
              formData.append('caption', captionInput.value);
              formData.append('imageUpload', imageInput.files[0]);

              fetch(`/post/${postId}?_method=PUT`, {
                method: 'POST',
                body: formData,
                headers: {
                  Accept: 'application/json'
                }
              })
                .then((response) => response.json())
                .then((data) => {
                  if (data.message === 'Post updated successfully') {
                    // Redirect to the profile page
                    window.location.href = '/profile';
                  } else {
                    throw new Error('Something went wrong. Please try again.');
                  }
                })
                .catch((error) => {
                  console.log(error);
                  alert(error.message);
                });
            });
          }
    </script>
  </body>
</html>
